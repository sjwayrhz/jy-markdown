apiVersion: v1
kind: ConfigMap
metadata:
  name:  api-config
  namespace: app-office
data:
  api-env: office
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name:  api-pvc
  namespace: app-office
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20G
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  api
  namespace: app-office
  labels:
    app:  api
spec:
  selector:
    matchLabels:
      app:  api
  replicas: 2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  api
    spec:
      containers:
        - name:  api
          image: 'registry.cn-shanghai.aliyuncs.com/jyjt/develop-api:202109060936'
          imagePullPolicy: IfNotPresent
          args: ["--spring.profiles.active=$(api-env-key)"]
          ports:
          - containerPort: 8081 
          env:
          - name: api-env-key
            valueFrom:
              configMapKeyRef:
                name:  api-config
                key: api-env  
          startupProbe:
            httpGet:
              path: /
              port: 8081
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            failureThreshold: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /swagger-ui.html
              port: 8081
            initialDelaySeconds: 40
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          resources:
            limits:
              cpu: "1800m"
              memory: "2Gi"
            requests:
              cpu: "1100m"
              memory: "1Gi" 
          volumeMounts: 
            - name: nfs
              mountPath: /logs
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName:  api-pvc
---
apiVersion: v1
kind: Service
metadata:
  name:  api-service
  namespace: app-office
  labels:
    name:  api-service
spec:
  type: NodePort
  ports:
  - name:  api
    port: 8081
    targetPort: 8081
    nodePort: 30087
  selector:
    app:  api
