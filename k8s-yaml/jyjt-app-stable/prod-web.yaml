apiVersion: v1
kind: ConfigMap
metadata:
  name: web-config
  namespace: app-prod
data:
  web-env: prod
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: web-pvc
  namespace: app-prod
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 80G
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: app-prod
  labels:
    app: web
spec:
  selector:
    matchLabels:
      app: web
  replicas: 2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: 'registry.cn-shanghai.aliyuncs.com/jyjt/develop-web:202109060901'
          imagePullPolicy: IfNotPresent
          args: ["--spring.profiles.active=$(web-env-key)"]
          ports:
          - containerPort: 8082 
          env:
          - name: web-env-key
            valueFrom:
              configMapKeyRef:
                name: web-config
                key: web-env 
          resources:
            limits:
              cpu: "1500m"
              memory: "2Gi"
            requests:
              cpu: "1000m"
              memory: "1Gi" 
          volumeMounts: 
            - name: nfs
              mountPath: /logs
          startupProbe:
            httpGet:
              path: /
              port: 8082
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8082
            failureThreshold: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /swagger-ui.html
              port: 8082
            initialDelaySeconds: 40
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName: web-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: web-service
  namespace: app-prod
  labels:
    name: web-service
spec:
  type: NodePort
  ports:
  - name: web
    port: 8082
    targetPort: 8082
    nodePort: 30083
  selector:
    app: web
