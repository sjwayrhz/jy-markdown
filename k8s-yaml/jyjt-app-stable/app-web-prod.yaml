apiVersion: v1
kind: ConfigMap
metadata:
  name: prod-web-config
  namespace: app-prod
data:
  web-env: prod
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prod-web-pvc
  namespace: app-prod
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 80G
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prod-web
  namespace: app-prod
  labels:
    app: prod-web
spec:
  selector:
    matchLabels:
      app: prod-web
  replicas: 2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: prod-web
    spec:
      containers:
        - name: prod-web
          image: 'registry.cn-shanghai.aliyuncs.com/jyjt/develop-web:202108271723'
          imagePullPolicy: IfNotPresent
          args: ["--spring.profiles.active=$(web-env-key)"]
          ports:
          - containerPort: 8080 
          env:
          - name: web-env-key
            valueFrom:
              configMapKeyRef:
                name: prod-web-config
                key: web-env 
          resources:
            limits:
              cpu: "800m"
              memory: "2Gi"
            requests:
              cpu: "400m"
              memory: "1Gi" 
          volumeMounts: 
            - name: nfs
              mountPath: /logs
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 100
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /swagger-ui.html
              port: 8080
            initialDelaySeconds: 120
            failureThreshold: 5
            periodSeconds: 10
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName: prod-web-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: prod-web-service
  namespace: app-prod
  labels:
    name: prod-web-service
spec:
  type: NodePort
  ports:
  - name: prod-web
    port: 8080
    targetPort: 8080
    nodePort: 30083
  selector:
    app: prod-web
